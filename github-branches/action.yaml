name: Manage GitHub Branches
description: Create or Delete GitHub Branches

inputs:
  action: 
    description: Delete or Create Action
    required: true
  repositories: 
    description: JSON List of repositories to perform action upon
    required: true
  branch-name:
    description: Name of the Branch to perform actions upon
    required: true
  branch-source: 
    description: Source Branch for creation
    default: develop
  dry-run:
    description: Don't perform action, just output information
    default: 'false'

runs:
  using: composite
  steps:
    - name: Create/Delete Branch
      shell: bash
      run: |
        # Action: ${{ inputs.action }} ${{ inputs.branch-name }} in all Repositories
        echo "# Branch ${{ inputs.action }} summary ${{ inputs.dry-run == 'true' && '(Dry Run)' || '' }}" >> $GITHUB_STEP_SUMMARY
        echo "| Repository | Branch | Status |" >> $GITHUB_STEP_SUMMARY
        echo "| :--- | :--- | :--- |" >> $GITHUB_STEP_SUMMARY
        gh auth setup-git

        # Perform Actions
        manage_branch () {
          if [[ $(awk '{print length}' <<< $(git ls-remote --heads --tags https://github.com/dvsa/$1 ${{ inputs.branch-name }})) ${{ inputs.action == 'delete' && '==' || '>' }} 0 ]]; then
            echo "| $1 | ${{ inputs.branch-name }} | ☑️ ${{ inputs.action == 'delete' && 'Does not Exist' || 'Already Exists' }} |" >> $GITHUB_STEP_SUMMARY

          else
            if [[ "${{ inputs.action }}" == "Create" ]]; then
              commit_id=$(gh api -H "Accept: application/vnd.github+json" -H "X-GitHub-Api-Version: 2022-11-28" /repos/dvsa/$1/branches/${{ inputs.branch-source }} | jq -r '.commit.sha')
              ${{ inputs.dry-run == 'true' && 'echo [debug] ' || '' }}gh api -X POST /repos/dvsa/$1/git/refs -f ref='refs/heads/${{ inputs.branch-name }}' -f sha="${commit_id}" ${{ inputs.dry-run != 'true' && '1>/dev/null' || '' }} && { echo "| $1 | ${{ inputs.branch-name }} | ✅ Created |" >> $GITHUB_STEP_SUMMARY; } || { echo "| $1 | ${{ inputs.branch-name }} | ❌ Failed |" >> $GITHUB_STEP_SUMMARY; }
                
            elif [[ "${{ inputs.action }}" == "Delete" ]]; then
              ${{ inputs.dry-run == 'true' && 'echo [debug] ' || '' }}gh api -X DELETE /repos/dvsa/$1/git/refs/heads/${{ inputs.branch-name }} ${{ inputs.dry-run != 'true' && '1>/dev/null' || '' }} && { echo "| $1 | ${{ inputs.branch-name }} | ✅ Deleted |" >> $GITHUB_STEP_SUMMARY; } || { echo "| $1 | ${{ inputs.branch-name }} | ❌ Failed |" >> $GITHUB_STEP_SUMMARY; }

            else
              echo "❌ Invalid action requested: `${{ inputs.action }}`" >> $GITHUB_STEP_SUMMARY
              exit 99
            fi
          fi
          printf "➡️ \033[0;34m${{ inputs.action }}d \033[0m${{ inputs.branch-name }} \033[0;34mon \033[0m$1\n"
        }

        for repository in $(jq -r '.[]' <<< '${{ inputs.repositories }}'); do
          manage_branch $repository &
        done
        wait