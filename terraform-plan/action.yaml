name: Terraform Plan
description: Perform a Terraform Plan

inputs:
  options:
    description: Additional Terraform Options 
  validate:
    description: Run a validation on the Terraform first
    default: 'true'
  environment-name:
    description: Environment Identifier (e.g. `cb2-1099`)
    required: true
  terraform-version:
    description: The version of Terraform to use (defaults to 1.7.3)
    default: 1.7.3
  plan-retention:
    description: Number of days to retain the plan
    default: '5'
  create-workspace:
    description: Should a new Terraform Workspace be created
    default: 'true'

outputs:
  changes-detected:
    description: Terraform has detected changes
    value: ${{ steps.plan.outputs.changes-detected }}

runs:
  using: composite
  steps:
    - name: Initialize Terraform
      uses: dvsa/cvs-github-actions/terraform-initialize@develop
      with:
        terraform-version: ${{ inputs.terraform-version }}
        environment-name: ${{ inputs.environment-name }}
        create-workspace: ${{ inputs.create-workspace }}

    - name: ‚úÖ Terraform Validate
      shell: bash
      if: ${{ inputs.validate == 'true' }}
      run: |
        terraform validate -no-color
        echo 'Terraform Validated ‚úÖ' >> $GITHUB_STEP_SUMMARY

    - name: üõ†Ô∏è Terraform Plan
      id: plan
      shell: bash
      run: |
        # Create Terraform Plan File
        terraform plan ${{ inputs.options }} -out terraform.tfplan
        terraform show terraform.tfplan -no-color > plan.txt
        echo 'Plan Completed ‚úÖ' >> $GITHUB_STEP_SUMMARY
        plan_detail=$(terraform show -no-color terraform.tfplan | grep -E 'Plan:|Your infrastructure' || echo "No environment currently deployed")
        echo "${plan_detail}" >> $GITHUB_STEP_SUMMARY

        if [[ $(awk '{print index($0, "Plan:")}' <<< $plan_detail) > 0 ]]; then
          # Changes have been detected
          echo "changes-detected=true" >> $GITHUB_OUTPUT
        else
          echo "changes-detected=false" >> $GITHUB_OUTPUT
        fi 

    - name: üìù Upload Plan
      uses: actions/upload-artifact@v4
      with:
        name: plan-${{ github.run_id }}
        path: |
          plan.txt
          terraform.tfplan
        retention-days: ${{ inputs.plan-retention }}