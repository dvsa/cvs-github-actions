name: Test Mobile

on: 
 workflow_call:
  inputs:
    environment:
      required: true
      type: string
    builder:
      required: false
      type: string
      default: ubuntu-latest
    retention_days:
      required: false
      type: number
      default: 1
  secrets:
    MGMT_ROLE_NAME:
      required: true
      description: The AWS Role for the Management Account.

permissions:
  contents: write
  id-token: write

jobs:
  steps:
    name: Test VTA [${{ inputs.environment }}]
    runs-on: ${{ inputs.builder }}
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: 'feature/VTA-1748'

      - uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'

      - uses: actions/setup-node@v3
        with:
          node-version: '16.17.0'

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.MGMT_ROLE_NAME }}
          aws-region: eu-west-1
          role-session-name: ServiceAutoGHAMGMT

      - uses: aws-actions/aws-secretsmanager-get-secrets@v1
        with:
          secret-ids: 'vta-automation/env'
          parse-json-secrets: true
      
      - name: üîç Configure Settings Files
        run: |
          mkdir creds
          aws secretsmanager get-secret-value --secret-id ${{ env.VTA_AUTOMATION_ENV_CREDENTIALS }} --query SecretString --output text > creds/credentials.json
          aws secretsmanager get-secret-value --secret-id ${{ env.VTA_AUTOMATION_ENV_OPENVISITS }} --query SecretString --output text > creds/openVisit.ts
          echo ${{ env.VTA_AUTOMATION_ENV_NPMJS_REGISTRY }} >> .npmrc
          echo ${{ env.VTA_AUTOMATION_ENV_NPM_PKG }} >> .npmrc
          echo "BRANCH=develop" > .env

      - name: üì± Get App.app
        env:
          ARTEFACTS: ${{ env.VTA_AUTOMATION_ENV_AWS_ARTEFACT_BUCKET }}
        run: |
          mkdir apps
          OBJECT="$(aws s3 ls s3://${{ env.ARTEFACTS }}/github-actions/files/${{ inputs.environment }}/ --recursive | sort | grep 'APP.txt' | tail -n 1 | awk '{print $4}')"
          aws s3 cp s3://${{ env.ARTEFACTS }}/$OBJECT apps/develop-APP.txt
          wget -q -O apps/CVSMobile.App.zip `cat apps/develop-APP.txt`
          unzip -qq apps/CVSMobile.App.zip -d apps/

      - name: üõ†Ô∏è Install Dependencies
        run: | 
          echo "NPM: $(which npm)"
          echo "NODE: $(which node)"
          echo "NODE VERSION: $(node -v)"
          npm i
      
      - name: üõ†Ô∏è Run Automation Suite
        run: npm run wdio:vta:ap:report