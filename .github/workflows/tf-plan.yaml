name: Terraform Plan
run-name: "Terraform Plan - ${{ inputs.branch }}"
on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: true
        description: 'The branch to action on, Example: feature/CVS-1234'
      environment:
        type: string
        required: false
        description: 'The environment to action against'
      tf-version:
        type: string
        required: false
        description: 'The version of Terraform to run'
        default: '1.7.3'
      retention-days:
        required: false
        type: number
        description: 'The amount of days to hold a plan artefact for'
        default: 3
      workspace:
        required: true
        type: string
        description: 'The Terraform workspace to action against'
      runner:
        required: false
        type: string
        description: 'The Github runner machine type'
        default: ubuntu-latest
    secrets:
      AWS_MGMT_ROLE:
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  plan:
    name: Terraform Plan ${{ inputs.branch }}
    runs-on: ${{ inputs.runner }}
    steps:
      - name: 📨 Get Codebase
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_MGMT_ROLE }}
          aws-region: eu-west-1
          role-session-name: Terraform-GHA

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.tf-version }}
          terraform_wrapper: false
      
      - name: 🛠️ Terraform Init
        run: |
          terraform init -lock-timeout=300s
          terraform workspace select ${{ inputs.workspace }} || terraform workspace new ${{ inputs.workspace }}
          echo 'Workspace: ${{ inputs.workspace }}' >> $GITHUB_STEP_SUMMARY

      - name: ✅ Terraform Validate
        run: |
          terraform validate -no-color
          echo 'Terraform Validated ✅' >> $GITHUB_STEP_SUMMARY
  
      - name: 🛠️ Terraform Plan
        continue-on-error: true
        run: |
          terraform plan -out terraform.tfplan
          terraform show terraform.tfplan -no-color > plan.txt
          echo 'Plan Completed ✅' >> $GITHUB_STEP_SUMMARY
  
      - name: 📝 Upload Plan
        uses: actions/upload-artifact@v4
        with:
          name: plan-${{ github.run_id }}
          path: |
            plan.txt
            terraform.tfplan
          retention-days: ${{ inputs.retention-days }}
