name: Build zip and upload hash

on:
  workflow_call:
    inputs:
      mono_repo:
        type: boolean
        default: false
    secrets:
      CVS_MGMT_AWS_ROLE:
        required: true
      DVSA_AWS_REGION:
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CVS_MGMT_AWS_ROLE }}
          aws-region: ${{ secrets.DVSA_AWS_REGION }}
          role-session-name: '${{ github.event.repository.name }}-hash-upload'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: npm ci

      - name: Start MySQL
        run: sudo systemctl start mysql.service

      - name: Install Liquibase
        env:
          LB_VERSION: 4.23.0
        run: |
          curl -L https://github.com/liquibase/liquibase/releases/download/v${LB_VERSION}/liquibase-${LB_VERSION}.zip --output liquibase-${LB_VERSION}.zip
          unzip -o -d liquibase liquibase-${LB_VERSION}.zip
          ./liquibase/liquibase --version
          
## Make /liquibase directory and change owner to liquibase
#  RUN mkdir /liquibase
#  WORKDIR /liquibase
#
#  #Symbolic link will be broken until later
#  RUN ln -s /liquibase/liquibase /usr/local/bin/liquibase
#
#  # Latest Liquibase Release Version
#  ARG LIQUIBASE_VERSION=4.23.0
#
#  # Download, verify, extract
#  ARG LB_SHA256=988b8734da3f2f987646fa533748d9b7aae2f889741fd6922f86ae3a321ea635
#  RUN set -x \
#  && wget -q -O liquibase-${LIQUIBASE_VERSION}.tar.gz "https://github.com/liquibase/liquibase/releases/download/v${LIQUIBASE_VERSION}/liquibase-${LIQUIBASE_VERSION}.tar.gz" \
#  && echo "$LB_SHA256  liquibase-${LIQUIBASE_VERSION}.tar.gz" | sha256sum -c - \
#  && tar -xzf liquibase-${LIQUIBASE_VERSION}.tar.gz \
#  && rm liquibase-${LIQUIBASE_VERSION}.tar.gz
#
#  ARG MYSQL_SHA256=a0a1be0389e541dad8841b326e79c51d39abbe1ca52267304d76d1cf4801ce96
#  RUN wget --no-verbose -O /liquibase/lib/mysql.jar https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.25/mysql-connector-java-8.0.25.jar \
#  && wget --no-verbose -O /liquibase/lib/mysql.jar.asc https://repo1.maven.org/maven2/mysql/mysql-connector-java/8.0.25/mysql-connector-java-8.0.25.jar.asc \
#  && gpg --auto-key-locate keyserver --keyserver keyserver.ubuntu.com --keyserver-options auto-key-retrieve --verify /liquibase/lib/mysql.jar.asc /liquibase/lib/mysql.jar \
#  && echo "$MYSQL_SHA256  /liquibase/lib/mysql.jar" | sha256sum -c -

      - name: Install tools
        run: npm run tools-setup

      - name: Build Artifact
        run: npm run build

      - name: Test
        run: npm run test

      - name: Test I
        run: npm run test-i

      - name: Package Artifact
        env:
          ZIP_NAME: ${{ github.sha }}
        run: |
          npm run package

      - name: Make branch lowercase
        env:
          SHORT_BRANCH: ${{ github.ref_name }}
        run: |
          SHORT_BRANCH=${SHORT_BRANCH##*/}
          echo "SHORT_BRANCH=${SHORT_BRANCH,,}" >> $GITHUB_ENV

      - name: Make bucket name
        env:
          BUCKET_NAME: ${{ github.event.repository.name }}
        run: |
          BUCKET_NAME=$(echo "$BUCKET_NAME" | sed -e "s/cvs-//" -e "s/svc-//" -e "s/tsk-//" -e "s/app-//")
          echo "BUCKET_NAME=${BUCKET_NAME,,}" >> $GITHUB_ENV
          echo "BUCKET_NAME: $BUCKET_NAME"

      - name: Upload hash zip to S3 (mono-repo)
        if: ${{ inputs.mono_repo == true }}
        run: |
          for SERVICE in `ls ${{ github.sha }}*.zip | sed -e "s/^${{ github.sha }}-//" -e "s/.zip$//"`; do
            NODE_SHA=$(openssl dgst -sha256 -binary ${{ github.sha }}-$SERVICE.zip | openssl enc -base64)
            aws s3 cp ${{ github.sha }}-$SERVICE.zip s3://cvs-services/${{ env.BUCKET_NAME }}-$SERVICE/${{ github.sha }}.zip --metadata "sha256sum=$NODE_SHA,Tag=${{ env.BUCKET_NAME }}"
            echo ${{ github.sha }} > hash.txt
            aws s3 cp hash.txt s3://cvs-services/${{ env.BUCKET_NAME }}-$SERVICE/latestHash_${{ env.SHORT_BRANCH }}.txt --metadata 'Tag=${{ env.BUCKET_NAME }}-$SERVICE'
          done

      - name: Upload hash zip to S3 (solo-repo)
        if: ${{ inputs.mono_repo == false }}
        run: |
          NODE_SHA=$(openssl dgst -sha256 -binary ${{ github.sha }}.zip | openssl enc -base64)
          aws s3 cp ${{ github.sha }}.zip s3://cvs-services/${{ env.BUCKET_NAME }}/${{ github.sha }}.zip --metadata "sha256sum=$NODE_SHA,Tag=${{ env.BUCKET_NAME }}"
          echo ${{ github.sha }} > hash.txt
          aws s3 cp hash.txt s3://cvs-services/${{ env.BUCKET_NAME }}/latestHash_${{ env.SHORT_BRANCH }}.txt --metadata 'Tag=${{ env.BUCKET_NAME }}'
