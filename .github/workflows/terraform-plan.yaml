name: Terraform Plan
run-name: "${{ github.actor }} - ${{ github.run_id }}"
on:
  workflow_call:
    inputs:
      version:
        required: false
        type: string
        description: 'The Terraform version to use, defaults to 1.3.9'
        default: '1.3.9'
      workspace:
        required: false
        type: string
        description: 'The Terraform workspace to action against (cb2-12345), defaults to develop'
        default: 'develop'

    secrets:
      MGMT_ROLE:
        required: true


permissions:
    id-token: write
    contents: write
    pull-requests: write

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ inputs.version }}

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.MGMT_ROLE }}
          aws-region: eu-west-1
          role-session-name: Terraform-GHA

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      
      - name: Terraform Init
        id: init
        run: |
          terraform init
          terraform workspace select develop

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -no-color -out terraform.tfplan
          terraform show terraform.tfplan -no-color > plan.txt
        continue-on-error: true

      - uses: actions/upload-artifact@v4
        with:
          name: plan-${{ github.run_id }}
          path: |
            plan.txt
            terraform.tfplan
          retention-days: 2

      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>
      
            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`
      
            </details>
      
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
            <details><summary>Show Plan</summary>
      
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
      
            </details>
      
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Workspace: \`${{ inputs.workspace }}\`, Workflow: \`${{ github.workflow }}\`*`;
      
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })