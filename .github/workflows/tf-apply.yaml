name: Terraform Apply
run-name: "Terraform Apply - ${{ inputs.branch }}"
on:
  workflow_call:
    inputs:
      branch:
        type: string
        required: true
        description: 'The branch to action on, Example: feature/CVS-1234'
      environment:
        type: string
        required: true
        description: 'The environment to action against'
      tf-version:
        type: string
        required: false
        description: 'The version of Terraform to run'
        default: '1.3.9'
      retention-days:
        required: false
        type: number
        description: 'The amount of days to hold a plan artefact for'
        default: 3
      workspace:
        required: false
        type: string
        description: 'The Terraform workspace to action against'
        default: develop
      run-id:
        required: false
        type: string
        description: 'The Terraform Plan file'
    secrets:
      AWS_MGMT_ROLE:
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  apply:
    name: Terraform Apply ${{ inputs.branch }}
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      ENV: ${{ inputs.environment }}
    steps:
      - name: 📨 Get Codebase
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.branch }}

      - name: ⬇️ Download the release artifact
        uses: actions/download-artifact@v3
        with:
          name: plan-${{ inputs.run-id }}
          path: .

      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_MGMT_ROLE }}
          aws-region: eu-west-1
          role-session-name: Terraform-GHA

      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: '1.3.9'
          terraform_wrapper: false
      
      - name: 🛠️ Terraform Init
        run: |
          terraform init -lock-timeout=300s
          terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}
          echo "Workspace: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
  
      - name: 🛠️ Terraform Apply
        continue-on-error: true
        run: |
          terraform apply -lock-timeout=300s -no-color
          echo 'Plan Completed ✅' >> $GITHUB_STEP_SUMMARY
