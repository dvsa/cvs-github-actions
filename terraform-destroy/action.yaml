name: Terraform Destroy
description: Destroy an Environment using Terraform

inputs:
  environment-name:
    description: Environment Identifier (e.g. `cb2-1099`)
    required: true
  terraform-version:
    description: The version of Terraform to use (defaults to 1.7.3)
    default: 1.7.3
  dry-run:
    description: Don't perform action, just output information
    default: "true"

runs:
  using: composite
  steps:
    - name: Initialize Terraform
      uses: dvsa/cvs-github-actions/terraform-initialize@develop
      with:
        terraform-version: ${{ inputs.terraform-version }}
        environment-name: ${{ inputs.environment-name }}
        create-workspace: 'false'

    - name: Remove VPC Connections
      shell: bash        
      run: |
        # Remove all Lambda VPC Connections
        for lambda in $(terraform show -no-color | grep -E '\s+arn\s+=\s.*:lambda.*' | sed -E 's/.*"(.*:lambda.*:function:[a-z0-9-]+).*"/\1/' | sort | uniq); do
          echo "${${{ inputs.dry-run == 'true' && '(dryrun) ' || '' }}}remove: ${lambda}"
          ${{ inputs.dry-run == 'true' && 'echo' || '' }}AWS_PROFILE=main aws lambda update-function-configuration --function-name ${lambda} --vpc-config '{"SubnetIds":[], "SecurityGroupIds":[]}' >/dev/null
          fi
        done

    - name: Terraform Plan
      uses: dvsa/cvs-github-actions/terraform-plan@develop
      with:
        options: '-destroy'
        validate: 'false'
        environment-name: ${{ inputs.environment-name }}
        terraform-version: ${{ inputs.terraform-version }}
        create-workspace: 'false'

    - name: Terraform Apply
      if: ${{ inputs.dry-run == 'false' }}
      uses: dvsa/cvs-github-actions/terraform-apply@develop
      with:
        terraform-version: ${{ inputs.terraform-version }}
        environment-name: ${{ inputs.environment-name }}
        create-workspace: 'false'
        
    - name: Remove Workspace
      if: ${{ inputs.dry-run == 'false' }}
      shell: bash
      run: |
        # Remove ${{ inputs.environment-name }} Workspace
        terraform workspace select default
        terraform workspace delete ${{ inputs.environment-name }} 
        echo "Terraform Workspace \`${{ inputs.environment-name }}\` Deleted!" >> $GITHUB_STEP_SUMMARY

    - name: Remove Hash Files
      id: remove_hash_files
      uses: dvsa/cvs-github-actions/hash-delete@develop
      with:
        environment-name: ${{ inputs.environment-name }}
        dry-run: ${{ inputs.dry-run }}
